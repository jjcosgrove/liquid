#!/usr/bin/env node
!function(e){var n={};function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(i,r,function(n){return e[n]}.bind(null,r));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="/",t(t.s=11)}([function(e,n){e.exports=require("log-symbols")},function(e,n){e.exports=require("commander")},function(e,n){e.exports=require("fs")},function(e,n){e.exports=require("os")},function(e,n){e.exports=require("inquirer")},function(e,n){e.exports=require("js-yaml")},function(e,n){e.exports=require("path")},function(e,n){e.exports=require("inquirer-path")},function(e){e.exports=JSON.parse('{"name":"@jjcosgrove/liquid","version":"0.0.8","description":"Linode Quick Deployment (LiQuiD) CLI tool","author":"Jonathan James Cosgrove","license":"MIT","repository":{"type":"git","url":"https://github.com/jjcosgrove/liquid.git"},"scripts":{"build":"NODE_ENV=production webpack --config ./webpack.config.babel.js","prepack":"yarn install && rm -rf build && yarn build"},"bin":{"liquid":"./build/liquid.js"},"preferGlobal":true,"engines":{"node":">=10.0"},"dependencies":{"axios":"^0.19.0","commander":"^2.20.0","inquirer":"^6.5.0","inquirer-path":"^1.0.0-beta5","js-yaml":"^3.13.1","log-symbols":"^3.0.0","mkdirp":"^0.5.1"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","@babel/node":"^7.5.5","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.5.5","babel-loader":"^8.0.6","eslint":"^6.0.1","eslint-config-standard":"^13.0.1","eslint-loader":"^2.2.1","eslint-plugin-import":"^2.18.1","eslint-plugin-node":"^9.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.0","webpack":"^4.36.1","webpack-cli":"^3.3.6","webpack-node-externals":"^1.7.2"}}')},function(e,n){e.exports=require("mkdirp")},function(e,n){e.exports=require("axios")},function(e,n,t){e.exports=t(12)},function(e,n,t){"use strict";t.r(n);var i=t(3),r=t.n(i),a=t(6),o=t(1),c=t.n(o),s=t(4),u=t(7),l=t(0),p=t.n(l);function f(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,i)}return t}function d(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var y=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?f(t,!0).forEach(function(n){d(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(t).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}({appName:"LiQuiD",linode:{baseAPIConfig:{apiVersion:"v4",baseURL:"https://api.linode.com",headers:{ContentType:"application/json"}},endpoints:{data:{TYPES:"/linode/types",REGIONS:"/regions",IMAGES:"/images"},linode:{CREATE:"/linode/instances"}}}},t(8)),g=t(2),b=t.n(g),m=t(5),h=t.n(m),v=t(9),w=t.n(v),O=t(10),k=t.n(O);function j(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,i)}return t}function P(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?j(t,!0).forEach(function(n){S(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):j(t).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function S(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function I(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var C=function(e){return e.data&&e.data.data?e.data.data:e.data},E=function(e){return Promise.reject(e)},D=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.createConfig(n),this.createInstance(y.linode.endpoints),this.assignInterceptors(C,E)}var n,t,i;return n=e,(t=[{key:"createConfig",value:function(e){var n=y.linode.baseAPIConfig;this.apiConfig=P({},n,{baseURL:"".concat(n.baseURL,"/").concat(n.apiVersion),headers:P({},n.headers,{Authorization:"Bearer ".concat(e)})})}},{key:"createInstance",value:function(e){this.apiInstance=k.a.create(this.apiConfig),this.apiEndpoints=e}},{key:"assignInterceptors",value:function(e,n){this.apiInstance.interceptors.response.use(e,n)}},{key:"getTypes",value:function(){return this.apiInstance.get(this.apiEndpoints.data.TYPES)}},{key:"getRegions",value:function(){return this.apiInstance.get(this.apiEndpoints.data.REGIONS)}},{key:"getImages",value:function(){return this.apiInstance.get(this.apiEndpoints.data.IMAGES)}},{key:"createLinode",value:function(e){return this.apiInstance.post(this.apiEndpoints.linode.CREATE,e)}}])&&I(n.prototype,t),i&&I(n,i),e}();function L(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],i=!0,r=!1,a=void 0;try{for(var o,c=e[Symbol.iterator]();!(i=(o=c.next()).done)&&(t.push(o.value),!n||t.length!==n);i=!0);}catch(e){r=!0,a=e}finally{try{i||null==c.return||c.return()}finally{if(r)throw a}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function x(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}var _=new(function(){function e(){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.homeDir="".concat(r.a.homedir()),this.baseDir="".concat(this.homeDir,"/.").concat(y.appName.toLowerCase()),this.configFile="".concat(this.baseDir,"/").concat(y.appName.toLowerCase(),".yml")}var n,t,i;return n=e,(t=[{key:"initialize",value:function(e){this.createConfigsAndStore(this.homeDir,e),console.log(p.a.success,"".concat(y.appName," successfully initialized"))}},{key:"createConfigsAndStore",value:function(e,n){var t=!1;w()(this.baseDir,function(e){e&&(t=!0)}),this.writeConfig({token:n}),t&&console.log(p.a.error,"Cannot create ".concat(y.appName," folders and files. Check permissions"))}},{key:"getLinodeData",value:function(){var e=this;return new Promise(function(n,t){var i=e.readConfig(),r=new D(i.token),a=r.getTypes(),o=r.getRegions(),c=r.getImages();Promise.all([a,o,c]).then(function(e){var t=L(e,3),i=t[0],r=t[1],a=t[2];n({types:i.map(function(e){return{name:"".concat(e.label," (").concat(e.id,")"),value:e.id}}),regions:r.map(function(e){return{name:"".concat(e.country.toUpperCase()," (").concat(e.id,")"),value:e.id}}),images:a.map(function(e){return{name:"".concat(e.label," (").concat(e.id,")"),value:e.id}})})})})}},{key:"createLinodeInstance",value:function(e){if(this.alreadyInitialized()){e.include_ssh_key?e.authorized_keys=[this.readSSHKeyFromFile(e.authorized_keys)]:e.include_ssh_key=null;var n=this.readConfig();new D(n.token).createLinode(e).then(function(n){console.log(p.a.success,"Linode: ".concat(n.label," (id: ").concat(n.id,") has been assigned the IP: ").concat(n.ipv4,", is currently ").concat(n.status," ").concat(e.booted?"and will":"but will not"," boot."))}).catch(function(n){console.log(p.a.error,n.message),console.log(p.a.error,e)})}else console.log(p.a.info,"Please run: ".concat(y.appName," init"))}},{key:"alreadyInitialized",value:function(){try{return b.a.statSync(this.baseDir).isDirectory()}catch(e){return"ENOENT"===!e.code}}},{key:"readSSHKeyFromFile",value:function(e){try{return b.a.readFileSync(e,"utf8").toString().replace("\n","")}catch(e){console.log(p.a.error,"Cannot read from ".concat(y.appName," configuration"))}}},{key:"readConfig",value:function(){try{return h.a.safeLoad(b.a.readFileSync(this.configFile,"utf8"))}catch(e){console.log(p.a.error,"Cannot read from ".concat(y.appName," configuration"))}}},{key:"writeConfig",value:function(e){try{b.a.writeFileSync(this.configFile,h.a.dump(e))}catch(e){console.log(p.a.error,"Cannot write to ".concat(y.appName," configuration"))}}}])&&x(n.prototype,t),i&&x(n,i),e}()),N=r.a.homedir();s.prompt.registerPrompt("path",u.PathPrompt),c.a.version(y.version).description(y.description),c.a.command("init").description("Initialize LiQuiD with a Linode Personal Access Token").action(function(){_.alreadyInitialized()?console.log(p.a.info,"".concat(y.appName," has already been initialized")):Object(s.prompt)([{type:"input",name:"token",message:"Linode Personal Access Token:",validate:q}]).then(function(e){return _.initialize(e.token)})}),c.a.command("create").description("Provision a new Linode instance using the LiQuiD wizard").action(function(){_.alreadyInitialized()?_.getLinodeData().then(function(e){Object(s.prompt)([{type:"input",name:"label",default:"LINODE",message:"Name:"},{type:"list",choices:e.types,name:"type",default:"g6-nanode-1",message:"Type:"},{type:"list",choices:e.regions,name:"region",default:"eu-west",message:"Region:"},{type:"list",choices:e.images,name:"image",default:"linode/debian9",message:"Image:"},{type:"password",name:"root_pass",message:"Password",validate:q},{type:"confirm",name:"include_ssh_key",default:!1,message:"Include SSH Key?"},{type:"path",name:"authorized_keys",cwd:N,default:"".concat(N,"/.ssh/id_rsa.pub"),message:"SSH Key?",when:function(e){return e.include_ssh_key},validate:T},{type:"confirm",name:"backups_enabled",default:!1,message:"Backups?"},{type:"confirm",name:"booted",default:!1,message:"Boot?"}]).then(function(e){return _.createLinodeInstance(e)})}):console.log(p.a.info,"".concat(y.appName," has not been initialized. Please re-run with 'init'"))}),c.a.parse(process.argv);var q=function(e){return!!e.length||"Cannot be empty"},T=function(e){return".pub"===Object(a.extname)(e)||"Invalid SSH Key"}}]);